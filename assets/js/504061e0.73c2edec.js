"use strict";(self.webpackChunkdelta_docs_1=self.webpackChunkdelta_docs_1||[]).push([[744],{5033:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>o,default:()=>h,frontMatter:()=>a,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"background/transactions","title":"Transactions on delta","description":"Details on transaction types in domains and the delta base layer","source":"@site/docs/background/transactions.md","sourceDirName":"background","slug":"/background/transactions","permalink":"/docs/docs/background/transactions","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"title":"Transactions on delta","description":"Details on transaction types in domains and the delta base layer","sidebar_label":"Transactions","sidebar_position":4},"sidebar":"docSidebar","previous":{"title":"Vaults","permalink":"/docs/docs/background/vaults"},"next":{"title":"Laws and Proofs","permalink":"/docs/docs/background/laws"}}');var i=n(4848),r=n(8453);const a={title:"Transactions on delta",description:"Details on transaction types in domains and the delta base layer",sidebar_label:"Transactions",sidebar_position:4},o="Transactions on the delta Network",d={},c=[{value:"Overview",id:"overview",level:2},{value:"Using the CLI to submit transactions",id:"using-the-cli-to-submit-transactions",level:2}];function l(e){const t={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"transactions-on-the-delta-network",children:"Transactions on the delta Network"})}),"\n",(0,i.jsx)(t.h2,{id:"overview",children:"Overview"}),"\n",(0,i.jsx)(t.p,{children:"Since delta is a two-layer system, there are several different transaction types depending on who the message sender and recipient is."}),"\n",(0,i.jsxs)(t.p,{children:["Domain application code and business logic may affect the message content, timing or execution for ",(0,i.jsx)(t.strong,{children:"user-level transactions"}),", which can be achieved by building upon one of the base user-level transaction types: ",(0,i.jsx)(t.strong,{children:"debitAllowance"})," and ",(0,i.jsx)(t.strong,{children:"tokenMint"}),"."]}),"\n",(0,i.jsx)(t.p,{children:"Below is a summary of all transaction operations in the delta ecosystem."}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{children:"Transaction"}),(0,i.jsx)(t.th,{children:"Purpose"}),(0,i.jsx)(t.th,{children:"Message Sender"}),(0,i.jsx)(t.th,{children:"Message Recipient"}),(0,i.jsx)(t.th,{children:"Consensus"})]})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.strong,{children:"debitAllowance"})}),(0,i.jsx)(t.td,{children:"Transfer tokens up to a signed amount from one vault to another"}),(0,i.jsx)(t.td,{children:"Vault private key holder (user)"}),(0,i.jsx)(t.td,{children:"Domain Executor"}),(0,i.jsx)(t.td,{children:"Fast-path consensus"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.strong,{children:"Create tokenMint"})}),(0,i.jsx)(t.td,{children:"Issue a new token with the given parameters (including initial supply and recipient vaults)"}),(0,i.jsx)(t.td,{children:"Vault private key holder (user)"}),(0,i.jsx)(t.td,{children:"Domain Executor"}),(0,i.jsx)(t.td,{children:"Fast-path consensus"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.strong,{children:"Increase Supply of a tokenMint"})}),(0,i.jsx)(t.td,{children:"Issue additional supply of an existing tokenMint to the given recipient vaults"}),(0,i.jsx)(t.td,{children:"Vault private key holder (user)"}),(0,i.jsx)(t.td,{children:"Domain Executor"}),(0,i.jsx)(t.td,{children:"Fast-path consensus"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.strong,{children:"Submit SDL"})}),(0,i.jsx)(t.td,{children:"Submit state updates to the base layer"}),(0,i.jsx)(t.td,{children:"Domain Executor"}),(0,i.jsx)(t.td,{children:"Chosen Validator"}),(0,i.jsx)(t.td,{children:"Fast-path consensus"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.strong,{children:"Submit Proof"})}),(0,i.jsx)(t.td,{children:"Submit cryptographic proof of state updates"}),(0,i.jsx)(t.td,{children:"Domain Executor"}),(0,i.jsx)(t.td,{children:"Chosen Validator"}),(0,i.jsx)(t.td,{children:"Fast-path consensus"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.strong,{children:"Submit ELA"})}),(0,i.jsx)(t.td,{children:"Register domain with the delta network"}),(0,i.jsx)(t.td,{children:"CLI"}),(0,i.jsx)(t.td,{children:"Chosen Validator"}),(0,i.jsx)(t.td,{children:"Epoch end transition"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.strong,{children:"Declare Validator"})}),(0,i.jsx)(t.td,{children:"Add new validator to consensus set"}),(0,i.jsx)(t.td,{children:"CLI"}),(0,i.jsx)(t.td,{children:"Chosen Validator"}),(0,i.jsx)(t.td,{children:"Epoch end transition"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.strong,{children:"Base Layer Migration"})}),(0,i.jsx)(t.td,{children:"Allows a user to forcefully migrate owned assets out of an unresponsive or malicious domain"}),(0,i.jsx)(t.td,{children:"Vault private key holder (user)"}),(0,i.jsx)(t.td,{children:"Chosen Validator"}),(0,i.jsx)(t.td,{children:"Epoch end transition"})]})]})]}),"\n",(0,i.jsx)(t.h2,{id:"using-the-cli-to-submit-transactions",children:"Using the CLI to submit transactions"}),"\n",(0,i.jsx)(t.admonition,{type:"note",children:(0,i.jsxs)(t.p,{children:["Using the delta CLI requires ",(0,i.jsx)(t.a,{href:"/docs/docs/building/request-sdk-access",children:"SDK Access"})," and installation of the delta-cli registry"]})}),"\n",(0,i.jsx)(t.p,{children:"The delta CLI tool can be used to submit transactions directly to a base layer validator (cannot be used for user-level transactions that occur in domains)."}),"\n",(0,i.jsxs)(t.ol,{children:["\n",(0,i.jsxs)(t.li,{children:["Save a JSON file with the transaction content","\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-json",metastring:'title="Example ELA Submission"',children:'{\n    "type": "create_executor",\n    "data": {\n        "ela": {\n            "executor": <ed25519 pubkey>,\n            "executor_operator": <ed25519 pubkey>,\n            "shard": <shard id>,\n            "collateral": 100,\n            "activation_epoch": 0,\n            "deactivation_epoch": 999999,\n            "lease_per_epoch": 0\n        }\n    }\n}\n'})}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:["Use the CLI to submit the transaction data","\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-bash",children:"delta-cli submit --url <chosen validator address> \\\n--keypair <path-to-keypair-json> \\\ntransaction_data.json\n"})}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>o});var s=n(6540);const i={},r=s.createContext(i);function a(e){const t=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),s.createElement(r.Provider,{value:t},e.children)}}}]);
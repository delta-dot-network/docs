"use strict";(self.webpackChunkdelta_docs_1=self.webpackChunkdelta_docs_1||[]).push([[598],{1621:(e,n,o)=>{o.d(n,{A:()=>t});const t=o.p+"assets/images/domain_components_simple-ad37f803a675278ee32c729e74fc81cf.png"},2040:(e,n,o)=>{o.d(n,{A:()=>t});const t=o.p+"assets/images/delta_ecosystem_view-03d20a2a2a6e84fb3a819942bcad83e3.png"},7458:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>r,contentTitle:()=>d,default:()=>m,frontMatter:()=>s,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"Building a Domain/domain components","title":"Domain components","description":"To build a domain on delta, there are three main elements of the system you\u2019ll need to know well: the domain you\u2019ll build, the executor that allows you to connect this domain to the base layer, and the shard that your domain will own.","source":"@site/docs/Building a Domain/domain components.md","sourceDirName":"Building a Domain","slug":"/Building a Domain/domain components","permalink":"/docs/docs/Building a Domain/domain components","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"title":"Domain components","sidebar_label":"Domain components","sidebar_position":3},"sidebar":"docSidebar","previous":{"title":"High-level process","permalink":"/docs/docs/Building a Domain/high level process"},"next":{"title":"Executor components","permalink":"/docs/docs/Building a Domain/executor components"}}');var a=o(4848),i=o(8453);const s={title:"Domain components",sidebar_label:"Domain components",sidebar_position:3},d="Components of a domain on delta",r={},l=[];function c(e){const n={h1:"h1",header:"header",img:"img",li:"li",ol:"ol",p:"p",strong:"strong",...(0,i.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"components-of-a-domain-on-delta",children:"Components of a domain on delta"})}),"\n",(0,a.jsx)(n.p,{children:"To build a domain on delta, there are three main elements of the system you\u2019ll need to know well: the domain you\u2019ll build, the executor that allows you to connect this domain to the base layer, and the shard that your domain will own."}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Domain"}),": a custom execution environment and all code related to it. This includes any frontend user interface, application code, optional custom local storage, and the executor."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Executor"}),': the core component of a domain, which processes transactions and interacts with delta\u2019s base layer. You can think of the executor as a domain\u2019s \u201cstate machine." An executor is contains a few key parts: the domain\u2019s custom RPC server, a sequencer of the domain\u2019s choosing, and a runtime environment to coordinate everything.']}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Shard:"})," The portion of delta\u2019s global state which belongs to a given domain. Assets are stored in vaults on the shard, and these vault balances are updated by State Difference Lists (SDLs) and corresponding zk proofs sent from the domain to the base layer. The state of each shard is globally viewable, but vaults can only be debited by the owner domain to avoid state conflicts.\n\xa0\n\xa0"]}),"\n"]}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"Simplified view of a domain's main components"}),"\n",(0,a.jsx)(n.img,{alt:"simplified view of a domain and delta",src:o(1621).A+"",width:"897",height:"368"})]}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"Domain-centric view of the delta Network"}),"\n",(0,a.jsx)(n.img,{alt:"domain-centric view of the delta Network",src:o(2040).A+"",width:"1565",height:"863"})]})]})}function m(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}},8453:(e,n,o)=>{o.d(n,{R:()=>s,x:()=>d});var t=o(6540);const a={},i=t.createContext(a);function s(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:s(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);
"use strict";(self.webpackChunkdelta_docs_1=self.webpackChunkdelta_docs_1||[]).push([[958],{7520:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>r,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"Building a Domain/delta sdk","title":"The delta SDK","description":"If you\u2019re building a domain from scratch, the delta SDK provides some basic building blocks to get you started with the asset infrastructure. The Executor SDK can be imported as a rust crate, and includes:","source":"@site/docs/Building a Domain/delta sdk.md","sourceDirName":"Building a Domain","slug":"/Building a Domain/delta sdk","permalink":"/docs/docs/Building a Domain/delta sdk","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"title":"The delta SDK","sidebar_label":"The delta SDK","sidebar_position":1},"sidebar":"docSidebar","previous":{"title":"Example workflow","permalink":"/docs/docs/Intro to Domains/workflow"},"next":{"title":"High-level process","permalink":"/docs/docs/Building a Domain/high level process"}}');var i=n(4848),a=n(8453);const o={title:"The delta SDK",sidebar_label:"The delta SDK",sidebar_position:1},r="Introducing the delta SDK",d={},l=[];function c(e){const t={em:"em",h1:"h1",header:"header",li:"li",p:"p",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"introducing-the-delta-sdk",children:"Introducing the delta SDK"})}),"\n",(0,i.jsx)(t.p,{children:"If you\u2019re building a domain from scratch, the delta SDK provides some basic building blocks to get you started with the asset infrastructure. The Executor SDK can be imported as a rust crate, and includes:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Cryptographic primitives:"})," tokens and NFTs, vaults and accounts, public/private keypairs and signatures"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"End-user operations:"})," token transfers, token mints and vault creation"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Communication with the base layer:"})," balance queries, account queries"]}),"\n"]}),"\n",(0,i.jsxs)(t.p,{children:["If you don't want to use Rust, we can provide ",(0,i.jsx)(t.strong,{children:"APIs compatible with other languages"})," (e.g. TypeScript) to access the most common operations: fetching vault data, minting new tokens, and debiting vaults.\nIn the future, language support will expand beyond Rust to allow developers in different languages to work with the delta SDK directly."]}),"\n",(0,i.jsxs)(t.p,{children:["delta integrations are designed to be beautifully simple, in order to allow domains to be maximally expressive. Beyond these simple SDK components, ",(0,i.jsx)(t.em,{children:"domain designers are free to build whatever and however they want."})]})]})}function u(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>r});var s=n(6540);const i={},a=s.createContext(i);function o(e){const t=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),s.createElement(a.Provider,{value:t},e.children)}}}]);